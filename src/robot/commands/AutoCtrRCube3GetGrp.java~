// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package robot.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import robot.subsystems.*;

/**
 *
 */
public class AutoCtrRCube3GetGrp extends CommandGroup {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public AutoCtrRCube3GetGrp() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
    	
    	addParallel(new 	IntakeAutoRetractCmd());
    	
        // 					DriveFwd2Cmd (  dist,   pwr,  hdg,  Mode, TO,  BrakeFlag, LimitOveride)
    	addSequential(new 	DriveFwd2Cmd (  46.0,   0.70, -50.0,   1,   3,    false,     false));
    	addSequential(new  DriveBrakeCmd (  3.0));
    	
    	addSequential(new DelayCmd(0.3));
    	addParallel(new IntakeHoldCmd());

    	// Did'nt pull back as far to speed things up in placing cube
       	addSequential(new 	DriveFwd2Cmd ( -40.0,   0.70, -50.0,   1,   3,    false,     false));
    	addSequential(new  DriveBrakeCmd (  3.0));
    	
       	//					armToPosCmd(position,  speed, mode,   timeOut
    	addParallel(new 	armToPosCmd("Switch",   0.0,   3.0,    3.0));    	

    	//										( turnAngle,  mode,    TO )
    	addSequential(new DrivePointTurnPidCmd	(  0.0,         0,    3.0));

    	
    	
    	// ******************************************************************************************
    	// 								 Place cube on Left Switch									* 
    	// ******************************************************************************************
    	
        // 					DriveFwd2Cmd (  dist,   pwr,   hdg,  Mode, TO,  BrakeFlag, LimitOveride)
    	addSequential(new 	DriveFwd2Cmd (  28.0,   0.75,  0.0,   1,    3,    false,     false));
    	
    	addSequential(new IntakeEjectCmd());
    	 
    } 
}
