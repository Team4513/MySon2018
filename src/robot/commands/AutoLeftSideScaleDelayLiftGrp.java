// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package robot.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import robot.subsystems.*;

/**
 *
 */
public class AutoLeftSideScaleDelayLiftGrp extends CommandGroup {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public AutoLeftSideScaleDelayLiftGrp() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
    	
    	// ******************************************************************************************
    	// 				 					Drive to Left Scale							 		* 
    	// ******************************************************************************************    	 
    	//					armHoldAtTopCmd( Mode, TO)
    	addParallel(new 	armHoldAtTopCmd(  0,    15));
    	
    	
    	// This will delay until we reach 170 inches (85 inches = 1.35 sec) from end this is to
    	// allow the elev time to get up half way. 90" would allow time to get all the way up.
    	
    	//					DelayByDistCmd( Dist,  Mode, TO)
    	addSequential(new 	DelayByDistCmd(  115.5, 0 ,   5)); // 
    	
    	
       	//					ElevToPosCmd(position,         speed, mode, timeOut
    	addSequential(new 	ElevToPosCmd("ELEVPOS1VALUE",   0.0,  3.0,    3.0)); 
    } 
}
