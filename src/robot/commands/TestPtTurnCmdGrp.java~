// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package robot.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import robot.subsystems.*;

/**
 *
 */
public class TestPtTurnCmdGrp extends CommandGroup {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public TestPtTurnCmdGrp() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
    	//				  DivePointTurn		Mode 0 = turn to Angle xxx
    	//									Mode 1 = turn to Heading 0-359
    	//
    	//                DrivePointTurnCmd(Angle, Speed, Timeout, Mode)
    	addSequential(new DrivePointTurnCmd( 30,    0.4,    8.2,    0));

    	// -------- Delay 4second for vision to get image ------------
    	addSequential(new DelayCmd(4.0));

    	//                DrivePointTurnCmd(Angle, Speed, Timeout, Mode)
    	addSequential(new DrivePointTurnCmd( -30,    0.4,    8.2,    0));
    	
    	// this will drive forward 32 inches and stop
    	// 			      DriveFwdCmd(tgtDist, accelPwr, cruisePwr, decelPwr, slowPwr, stopPwr, accelDist, decelDist, slowSpeed, stopDist,  TO,  Mode, Hdg)
    	//addSequential(new DriveFwdCmd(  32,     0.25,      0.25,      -0.0,     0.05,    -0.20,      3,       3,         0.0,       0.2,    3.0,  0,    0));

    } 
}
